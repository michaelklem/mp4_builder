/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.lbt.dto;

import com.lbt.dao.*;
import com.lbt.factory.*;
import com.lbt.exceptions.*;
import java.io.Serializable;
import java.util.*;
import java.util.Date;

public class Users implements Serializable
{
	/** 
	 * This attribute maps to the column user_id in the users table.
	 */
	protected long userId;

	/** 
	 * This attribute maps to the column first_name in the users table.
	 */
	protected String firstName;

	/** 
	 * This attribute maps to the column last_name in the users table.
	 */
	protected String lastName;

	/** 
	 * This attribute maps to the column email in the users table.
	 */
	protected String email;

	/** 
	 * This attribute maps to the column password in the users table.
	 */
	protected String password;

	protected String bucketPath;

	/** 
	 * This attribute maps to the column date_added in the users table.
	 */
	protected Date dateAdded;

	/** 
	 * This attribute maps to the column date_modified in the users table.
	 */
	protected Date dateModified;

	/** 
	 * This attribute maps to the column confirmation_code in the users table.
	 */
	protected String confirmationCode;

	/** 
	 * This attribute maps to the column confirmed in the users table.
	 */
	protected short confirmed;

	/** 
	 * This attribute maps to the column admin in the users table.
	 */
	protected short admin;

	/** 
	 * This attribute maps to the column paid in the users table.
	 */
	protected short paid;

	/** 
	 * This attribute maps to the column subscription_expires in the users table.
	 */
	protected Date subscriptionExpires;

	/** 
	 * This attribute maps to the column subscription_years in the users table.
	 */
	protected short subscriptionYears;

	/** 
	 * This attribute represents whether the primitive attribute subscriptionYears is null.
	 */
	protected boolean subscriptionYearsNull = true;

	/** 
	 * This attribute maps to the column reminder_sent in the users table.
	 */
	protected short reminderSent;

	/** 
	 * This attribute maps to the column canceled in the users table.
	 */
	protected short canceled;

	/** 
	 * This attribute maps to the column cancel_date in the users table.
	 */
	protected Date cancelDate;

	/** 
	 * This attribute maps to the column demo_account in the users table.
	 */
	protected short demoAccount;

	/**
	 * Method 'Users'
	 * 
	 */
	public Users()
	{
	}

	/**
	 * Method 'getUserId'
	 * 
	 * @return long
	 */
	public long getUserId()
	{
		return userId;
	}

	/**
	 * Method 'setUserId'
	 * 
	 * @param userId
	 */
	public void setUserId(long userId)
	{
		this.userId = userId;
	}

	/**
	 * Method 'getFirstName'
	 * 
	 * @return String
	 */
	public String getFirstName()
	{
		return firstName;
	}

	/**
	 * Method 'setFirstName'
	 * 
	 * @param firstName
	 */
	public void setFirstName(String firstName)
	{
		this.firstName = firstName;
	}

	/**
	 * Method 'getLastName'
	 * 
	 * @return String
	 */
	public String getLastName()
	{
		return lastName;
	}

	/**
	 * Method 'setLastName'
	 * 
	 * @param lastName
	 */
	public void setLastName(String lastName)
	{
		this.lastName = lastName;
	}

	/**
	 * Method 'getEmail'
	 * 
	 * @return String
	 */
	public String getEmail()
	{
		return email;
	}

	/**
	 * Method 'setEmail'
	 * 
	 * @param email
	 */
	public void setEmail(String email)
	{
		this.email = email;
	}

	/**
	 * Method 'getPassword'
	 * 
	 * @return String
	 */
	public String getPassword()
	{
		return password;
	}

	/**
	 * Method 'setPassword'
	 * 
	 * @param password
	 */
	public void setPassword(String password)
	{
		this.password = password;
	}


	public String getBucketPath()
	{
		return bucketPath;
	}

	public void setBucketPath(String data)
	{
		this.bucketPath = data;
	}

	
	/**
	 * Method 'getDateAdded'
	 * 
	 * @return Date
	 */
	public Date getDateAdded()
	{
		return dateAdded;
	}

	/**
	 * Method 'setDateAdded'
	 * 
	 * @param dateAdded
	 */
	public void setDateAdded(Date dateAdded)
	{
		this.dateAdded = dateAdded;
	}

	/**
	 * Method 'getDateModified'
	 * 
	 * @return Date
	 */
	public Date getDateModified()
	{
		return dateModified;
	}

	/**
	 * Method 'setDateModified'
	 * 
	 * @param dateModified
	 */
	public void setDateModified(Date dateModified)
	{
		this.dateModified = dateModified;
	}

	/**
	 * Method 'getConfirmationCode'
	 * 
	 * @return String
	 */
	public String getConfirmationCode()
	{
		return confirmationCode;
	}

	/**
	 * Method 'setConfirmationCode'
	 * 
	 * @param confirmationCode
	 */
	public void setConfirmationCode(String confirmationCode)
	{
		this.confirmationCode = confirmationCode;
	}

	/**
	 * Method 'getConfirmed'
	 * 
	 * @return short
	 */
	public short getConfirmed()
	{
		return confirmed;
	}

	/**
	 * Method 'setConfirmed'
	 * 
	 * @param confirmed
	 */
	public void setConfirmed(short confirmed)
	{
		this.confirmed = confirmed;
	}

	/**
	 * Method 'getAdmin'
	 * 
	 * @return short
	 */
	public short getAdmin()
	{
		return admin;
	}

	/**
	 * Method 'setAdmin'
	 * 
	 * @param admin
	 */
	public void setAdmin(short admin)
	{
		this.admin = admin;
	}

	/**
	 * Method 'getPaid'
	 * 
	 * @return short
	 */
	public short getPaid()
	{
		return paid;
	}

	/**
	 * Method 'setPaid'
	 * 
	 * @param paid
	 */
	public void setPaid(short paid)
	{
		this.paid = paid;
	}

	/**
	 * Method 'getSubscriptionExpires'
	 * 
	 * @return Date
	 */
	public Date getSubscriptionExpires()
	{
		return subscriptionExpires;
	}

	/**
	 * Method 'setSubscriptionExpires'
	 * 
	 * @param subscriptionExpires
	 */
	public void setSubscriptionExpires(Date subscriptionExpires)
	{
		this.subscriptionExpires = subscriptionExpires;
	}

	/**
	 * Method 'getSubscriptionYears'
	 * 
	 * @return short
	 */
	public short getSubscriptionYears()
	{
		return subscriptionYears;
	}

	/**
	 * Method 'setSubscriptionYears'
	 * 
	 * @param subscriptionYears
	 */
	public void setSubscriptionYears(short subscriptionYears)
	{
		this.subscriptionYears = subscriptionYears;
		this.subscriptionYearsNull = false;
	}

	/**
	 * Method 'setSubscriptionYearsNull'
	 * 
	 * @param value
	 */
	public void setSubscriptionYearsNull(boolean value)
	{
		this.subscriptionYearsNull = value;
	}

	/**
	 * Method 'isSubscriptionYearsNull'
	 * 
	 * @return boolean
	 */
	public boolean isSubscriptionYearsNull()
	{
		return subscriptionYearsNull;
	}

	/**
	 * Method 'getReminderSent'
	 * 
	 * @return short
	 */
	public short getReminderSent()
	{
		return reminderSent;
	}

	/**
	 * Method 'setReminderSent'
	 * 
	 * @param reminderSent
	 */
	public void setReminderSent(short reminderSent)
	{
		this.reminderSent = reminderSent;
	}

	/**
	 * Method 'getCanceled'
	 * 
	 * @return short
	 */
	public short getCanceled()
	{
		return canceled;
	}

	/**
	 * Method 'setCanceled'
	 * 
	 * @param canceled
	 */
	public void setCanceled(short canceled)
	{
		this.canceled = canceled;
	}

	/**
	 * Method 'getCancelDate'
	 * 
	 * @return Date
	 */
	public Date getCancelDate()
	{
		return cancelDate;
	}

	/**
	 * Method 'setCancelDate'
	 * 
	 * @param cancelDate
	 */
	public void setCancelDate(Date cancelDate)
	{
		this.cancelDate = cancelDate;
	}

	/**
	 * Method 'getDemoAccount'
	 * 
	 * @return short
	 */
	public short getDemoAccount()
	{
		return demoAccount;
	}

	/**
	 * Method 'setDemoAccount'
	 * 
	 * @param demoAccount
	 */
	public void setDemoAccount(short demoAccount)
	{
		this.demoAccount = demoAccount;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof Users)) {
			return false;
		}
		
		final Users _cast = (Users) _other;
		if (userId != _cast.userId) {
			return false;
		}
		
		if (firstName == null ? _cast.firstName != firstName : !firstName.equals( _cast.firstName )) {
			return false;
		}
		
		if (lastName == null ? _cast.lastName != lastName : !lastName.equals( _cast.lastName )) {
			return false;
		}
		
		if (email == null ? _cast.email != email : !email.equals( _cast.email )) {
			return false;
		}
		
		if (password == null ? _cast.password != password : !password.equals( _cast.password )) {
			return false;
		}
		
		if (dateAdded == null ? _cast.dateAdded != dateAdded : !dateAdded.equals( _cast.dateAdded )) {
			return false;
		}
		
		if (dateModified == null ? _cast.dateModified != dateModified : !dateModified.equals( _cast.dateModified )) {
			return false;
		}
		
		if (confirmationCode == null ? _cast.confirmationCode != confirmationCode : !confirmationCode.equals( _cast.confirmationCode )) {
			return false;
		}
		
		if (confirmed != _cast.confirmed) {
			return false;
		}
		
		if (admin != _cast.admin) {
			return false;
		}
		
		if (paid != _cast.paid) {
			return false;
		}
		
		if (subscriptionExpires == null ? _cast.subscriptionExpires != subscriptionExpires : !subscriptionExpires.equals( _cast.subscriptionExpires )) {
			return false;
		}
		
		if (subscriptionYears != _cast.subscriptionYears) {
			return false;
		}
		
		if (subscriptionYearsNull != _cast.subscriptionYearsNull) {
			return false;
		}
		
		if (reminderSent != _cast.reminderSent) {
			return false;
		}
		
		if (canceled != _cast.canceled) {
			return false;
		}
		
		if (cancelDate == null ? _cast.cancelDate != cancelDate : !cancelDate.equals( _cast.cancelDate )) {
			return false;
		}
		
		if (demoAccount != _cast.demoAccount) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		_hashCode = 29 * _hashCode + (int) (userId ^ (userId >>> 32));
		if (firstName != null) {
			_hashCode = 29 * _hashCode + firstName.hashCode();
		}
		
		if (lastName != null) {
			_hashCode = 29 * _hashCode + lastName.hashCode();
		}
		
		if (email != null) {
			_hashCode = 29 * _hashCode + email.hashCode();
		}
		
		if (password != null) {
			_hashCode = 29 * _hashCode + password.hashCode();
		}
		
		if (dateAdded != null) {
			_hashCode = 29 * _hashCode + dateAdded.hashCode();
		}
		
		if (dateModified != null) {
			_hashCode = 29 * _hashCode + dateModified.hashCode();
		}
		
		if (confirmationCode != null) {
			_hashCode = 29 * _hashCode + confirmationCode.hashCode();
		}
		
		_hashCode = 29 * _hashCode + (int) confirmed;
		_hashCode = 29 * _hashCode + (int) admin;
		_hashCode = 29 * _hashCode + (int) paid;
		if (subscriptionExpires != null) {
			_hashCode = 29 * _hashCode + subscriptionExpires.hashCode();
		}
		
		_hashCode = 29 * _hashCode + (int) subscriptionYears;
		_hashCode = 29 * _hashCode + (subscriptionYearsNull ? 1 : 0);
		_hashCode = 29 * _hashCode + (int) reminderSent;
		_hashCode = 29 * _hashCode + (int) canceled;
		if (cancelDate != null) {
			_hashCode = 29 * _hashCode + cancelDate.hashCode();
		}
		
		_hashCode = 29 * _hashCode + (int) demoAccount;
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return UsersPk
	 */
	public UsersPk createPk()
	{
		return new UsersPk(userId);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "com.lbt.dto.Users: " );
		ret.append( "userId=" + userId );
		ret.append( ", firstName=" + firstName );
		ret.append( ", lastName=" + lastName );
		ret.append( ", email=" + email );
		ret.append( ", password=" + password );
		ret.append( ", dateAdded=" + dateAdded );
		ret.append( ", dateModified=" + dateModified );
		ret.append( ", confirmationCode=" + confirmationCode );
		ret.append( ", confirmed=" + confirmed );
		ret.append( ", admin=" + admin );
		ret.append( ", paid=" + paid );
		ret.append( ", subscriptionExpires=" + subscriptionExpires );
		ret.append( ", subscriptionYears=" + subscriptionYears );
		ret.append( ", reminderSent=" + reminderSent );
		ret.append( ", canceled=" + canceled );
		ret.append( ", cancelDate=" + cancelDate );
		ret.append( ", demoAccount=" + demoAccount );
		ret.append( ", bucketPath=" + bucketPath );
		return ret.toString();
	}

}
