/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.lbt.dto;

import com.lbt.dao.*;
import com.lbt.factory.*;
import com.lbt.exceptions.*;
import java.io.Serializable;
import java.util.*;
import java.util.Date;

public class MP4Files implements Serializable
{
	/** 
	 * This attribute maps to the column mp4_id in the MP4Files table.
	 */
	protected long mp4Id;

	/** 
	 * This attribute maps to the column story_id in the MP4Files table.
	 */
	protected long storyId;

	/** 
	 * This attribute maps to the column user_id in the MP4Files table.
	 */
	protected long buyerUserId;

	/** 
	 * This attribute maps to the column title in the MP4Files table.
	 */
	protected String title;

	/** 
	 * This attribute maps to the column is_processing in the MP4Files table.
	 */
	protected short isProcessing;

	/** 
	 * This attribute represents whether the primitive attribute isProcessing is null.
	 */
	protected boolean isProcessingNull = true;

	/** 
	 * This attribute maps to the column is_complied in the MP4Files table.
	 */
	protected short isComplied;

	/** 
	 * This attribute represents whether the primitive attribute isComplied is null.
	 */
	protected boolean isCompliedNull = true;

	/** 
	 * This attribute maps to the column date_complied in the MP4Files table.
	 */
	protected Date dateComplied;

	/** 
	 * This attribute maps to the column is_error in the MP4Files table.
	 */
	protected short isError;

	/** 
	 * This attribute represents whether the primitive attribute isError is null.
	 */
	protected boolean isErrorNull = true;

	/** 
	 */
	protected short processAsMp4;

	/** 
	 */
	protected Date mp4JobRequestedDate;

	/** 
	 */
	protected Date mp4JobCompletedDate;

	protected String filename;
	
	protected Stories story;

	/**
	 * Method 'MP4Files'
	 * 
	 */
	public MP4Files()
	{
	}

	public String getFilename()
	{
		return filename;
	}

	public void setFilename(String filename)
	{
		this.filename = filename;
	}

	public Stories getStory()
	{
		return story;
	}

	public void setStory(Stories story)
	{
		this.story = story;
	}
	
	/**
	 * Method 'getMp4Id'
	 * 
	 * @return long
	 */
	public long getMp4Id()
	{
		return mp4Id;
	}

	/**
	 * Method 'setMp4Id'
	 * 
	 * @param mp4Id
	 */
	public void setMp4Id(long mp4Id)
	{
		this.mp4Id = mp4Id;
	}

	/**
	 * Method 'getStoryId'
	 * 
	 * @return long
	 */
	public long getStoryId()
	{
		return storyId;
	}

	/**
	 * Method 'setStoryId'
	 * 
	 * @param storyId
	 */
	public void setStoryId(long storyId)
	{
		this.storyId = storyId;
	}

	/**
	 * Method 'getBuyerUserId'
	 * 
	 * @return long
	 */
	public long getBuyerUserId()
	{
		return buyerUserId;
	}

	/**
	 * Method 'setUserId'
	 * 
	 * @param userId
	 */
	public void setBuyerUserId(long buyerUserId)
	{
		this.buyerUserId = buyerUserId;
	}

	/**
	 * Method 'getTitle'
	 * 
	 * @return String
	 */
	public String getTitle()
	{
		return title;
	}

	/**
	 * Method 'setTitle'
	 * 
	 * @param title
	 */
	public void setTitle(String title)
	{
		this.title = title;
	}

	/**
	 * Method 'getIsProcessing'
	 * 
	 * @return short
	 */
	public short getIsProcessing()
	{
		return isProcessing;
	}

	/**
	 * Method 'setIsProcessing'
	 * 
	 * @param isProcessing
	 */
	public void setIsProcessing(short isProcessing)
	{
		this.isProcessing = isProcessing;
		this.isProcessingNull = false;
	}

	/**
	 * Method 'setIsProcessingNull'
	 * 
	 * @param value
	 */
	public void setIsProcessingNull(boolean value)
	{
		this.isProcessingNull = value;
	}

	/**
	 * Method 'isIsProcessingNull'
	 * 
	 * @return boolean
	 */
	public boolean isIsProcessingNull()
	{
		return isProcessingNull;
	}

	/**
	 * Method 'getIsComplied'
	 * 
	 * @return short
	 */
	public short getIsComplied()
	{
		return isComplied;
	}

	/**
	 * Method 'setIsComplied'
	 * 
	 * @param isComplied
	 */
	public void setIsComplied(short isComplied)
	{
		this.isComplied = isComplied;
		this.isCompliedNull = false;
	}

	/**
	 * Method 'setIsCompliedNull'
	 * 
	 * @param value
	 */
	public void setIsCompliedNull(boolean value)
	{
		this.isCompliedNull = value;
	}

	/**
	 * Method 'isIsCompliedNull'
	 * 
	 * @return boolean
	 */
	public boolean isIsCompliedNull()
	{
		return isCompliedNull;
	}

	/**
	 * Method 'getDateComplied'
	 * 
	 * @return Date
	 */
	public Date getDateComplied()
	{
		return dateComplied;
	}

	/**
	 * Method 'setDateComplied'
	 * 
	 * @param dateComplied
	 */
	public void setDateComplied(Date dateComplied)
	{
		this.dateComplied = dateComplied;
	}

	/**
	 * Method 'getIsError'
	 * 
	 * @return short
	 */
	public short getIsError()
	{
		return isError;
	}

	/**
	 * Method 'setIsError'
	 * 
	 * @param isError
	 */
	public void setIsError(short isError)
	{
		this.isError = isError;
		this.isErrorNull = false;
	}

	/**
	 * Method 'setIsErrorNull'
	 * 
	 * @param value
	 */
	public void setIsErrorNull(boolean value)
	{
		this.isErrorNull = value;
	}

	/**
	 * Method 'isIsErrorNull'
	 * 
	 * @return boolean
	 */
	public boolean isIsErrorNull()
	{
		return isErrorNull;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof MP4Files)) {
			return false;
		}
		
		final MP4Files _cast = (MP4Files) _other;
		if (mp4Id != _cast.mp4Id) {
			return false;
		}

		if (storyId != _cast.storyId) {
			return false;
		}
		
		if (buyerUserId != _cast.buyerUserId) {
			return false;
		}
		
		if (title == null ? _cast.title != title : !title.equals( _cast.title )) {
			return false;
		}
		
		if (isProcessing != _cast.isProcessing) {
			return false;
		}
		
		if (isProcessingNull != _cast.isProcessingNull) {
			return false;
		}
		
		if (isComplied != _cast.isComplied) {
			return false;
		}
		
		if (isCompliedNull != _cast.isCompliedNull) {
			return false;
		}
		
		if (dateComplied == null ? _cast.dateComplied != dateComplied : !dateComplied.equals( _cast.dateComplied )) {
			return false;
		}
		
		if (isError != _cast.isError) {
			return false;
		}
		
		if (isErrorNull != _cast.isErrorNull) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		_hashCode = 29 * _hashCode + (int) (mp4Id ^ (mp4Id >>> 32));
		_hashCode = 29 * _hashCode + (int) (storyId ^ (storyId >>> 32));
		_hashCode = 29 * _hashCode + (int) (buyerUserId ^ (buyerUserId >>> 32));
		if (title != null) {
			_hashCode = 29 * _hashCode + title.hashCode();
		}
		
		_hashCode = 29 * _hashCode + (int) isProcessing;
		_hashCode = 29 * _hashCode + (isProcessingNull ? 1 : 0);
		_hashCode = 29 * _hashCode + (int) isComplied;
		_hashCode = 29 * _hashCode + (isCompliedNull ? 1 : 0);
		if (dateComplied != null) {
			_hashCode = 29 * _hashCode + dateComplied.hashCode();
		}
		
		_hashCode = 29 * _hashCode + (int) isError;
		_hashCode = 29 * _hashCode + (isErrorNull ? 1 : 0);
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return MP4FilesPk
	 */
	public MP4FilesPk createPk()
	{
		return new MP4FilesPk(mp4Id);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "com.lbt.dto.MP4Files: " );
		ret.append( "mp4Id=" + mp4Id );
		ret.append( ", storyId=" + storyId );
		ret.append( ", buyerUserId=" + buyerUserId );
		ret.append( ", title=" + title );
		ret.append( ", isProcessing=" + isProcessing );
		ret.append( ", isComplied=" + isComplied );
		ret.append( ", dateComplied=" + dateComplied );
		ret.append( ", isError=" + isError );
		ret.append( ", processAsMp4=" + processAsMp4 );
		ret.append( ", mp4JobCompletedDate=" + mp4JobCompletedDate );
		return ret.toString();
	}

	/**
	 */
	public void setProcessAsMp4(short value)
	{
		this.processAsMp4 = value;
	}

	/**
	 */
	public short getProcessAsMp4()
	{
		return this.processAsMp4;
	}

	/**
	 */
	public Date getMp4JobRequestedDate()
	{
		return mp4JobRequestedDate;
	}

	/**
	 */
	public void setMp4JobRequestedDate(Date date)
	{
		this.mp4JobRequestedDate = date;
	}

	/**
	 */
	public Date getMp4JobCompletedDate()
	{
		return mp4JobCompletedDate;
	}

	/**
	 */
	public void setMp4JobCompletedDate(Date date)
	{
		this.mp4JobCompletedDate = date;
	}

}
