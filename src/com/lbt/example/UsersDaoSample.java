/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.lbt.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.lbt.dao.UsersDao;
import com.lbt.dto.Users;
import com.lbt.exceptions.UsersDaoException;
import com.lbt.factory.UsersDaoFactory;

public class UsersDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereUserIdEquals(0);
		// findWhereFirstNameEquals("");
		// findWhereLastNameEquals("");
		// findWhereEmailEquals("");
		// findWherePasswordEquals("");
		// findWhereDateAddedEquals(null);
		// findWhereDateModifiedEquals(null);
		// findWhereConfirmationCodeEquals("");
		// findWhereConfirmedEquals(0);
		// findWhereAdminEquals(0);
		// findWherePaidEquals(0);
		// findWhereSubscriptionExpiresEquals(null);
		// findWhereSubscriptionYearsEquals(0);
		// findWhereReminderSentEquals(0);
		// findWhereCanceledEquals(0);
		// findWhereCancelDateEquals(null);
		// findWhereDemoAccountEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUserIdEquals'
	 * 
	 * @param userId
	 */
	public static void findWhereUserIdEquals(long userId)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereUserIdEquals(userId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereFirstNameEquals'
	 * 
	 * @param firstName
	 */
	public static void findWhereFirstNameEquals(String firstName)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereFirstNameEquals(firstName);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereLastNameEquals'
	 * 
	 * @param lastName
	 */
	public static void findWhereLastNameEquals(String lastName)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereLastNameEquals(lastName);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEmailEquals'
	 * 
	 * @param email
	 */
	public static void findWhereEmailEquals(String email)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereEmailEquals(email);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePasswordEquals'
	 * 
	 * @param password
	 */
	public static void findWherePasswordEquals(String password)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWherePasswordEquals(password);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDateAddedEquals'
	 * 
	 * @param dateAdded
	 */
	public static void findWhereDateAddedEquals(Date dateAdded)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereDateAddedEquals(dateAdded);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDateModifiedEquals'
	 * 
	 * @param dateModified
	 */
	public static void findWhereDateModifiedEquals(Date dateModified)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereDateModifiedEquals(dateModified);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereConfirmationCodeEquals'
	 * 
	 * @param confirmationCode
	 */
	public static void findWhereConfirmationCodeEquals(String confirmationCode)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereConfirmationCodeEquals(confirmationCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereConfirmedEquals'
	 * 
	 * @param confirmed
	 */
	public static void findWhereConfirmedEquals(short confirmed)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereConfirmedEquals(confirmed);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereAdminEquals'
	 * 
	 * @param admin
	 */
	public static void findWhereAdminEquals(short admin)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereAdminEquals(admin);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaidEquals'
	 * 
	 * @param paid
	 */
	public static void findWherePaidEquals(short paid)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWherePaidEquals(paid);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSubscriptionExpiresEquals'
	 * 
	 * @param subscriptionExpires
	 */
	public static void findWhereSubscriptionExpiresEquals(Date subscriptionExpires)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereSubscriptionExpiresEquals(subscriptionExpires);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSubscriptionYearsEquals'
	 * 
	 * @param subscriptionYears
	 */
	public static void findWhereSubscriptionYearsEquals(short subscriptionYears)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereSubscriptionYearsEquals(subscriptionYears);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereReminderSentEquals'
	 * 
	 * @param reminderSent
	 */
	public static void findWhereReminderSentEquals(short reminderSent)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereReminderSentEquals(reminderSent);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCanceledEquals'
	 * 
	 * @param canceled
	 */
	public static void findWhereCanceledEquals(short canceled)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereCanceledEquals(canceled);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCancelDateEquals'
	 * 
	 * @param cancelDate
	 */
	public static void findWhereCancelDateEquals(Date cancelDate)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereCancelDateEquals(cancelDate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDemoAccountEquals'
	 * 
	 * @param demoAccount
	 */
	public static void findWhereDemoAccountEquals(short demoAccount)
	{
		try {
			UsersDao _dao = getUsersDao();
			Users _result[] = _dao.findWhereDemoAccountEquals(demoAccount);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getUsersDao'
	 * 
	 * @return UsersDao
	 */
	public static UsersDao getUsersDao()
	{
		return UsersDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Users dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getUserId() );
		buf.append( ", " );
		buf.append( dto.getFirstName() );
		buf.append( ", " );
		buf.append( dto.getLastName() );
		buf.append( ", " );
		buf.append( dto.getEmail() );
		buf.append( ", " );
		buf.append( dto.getPassword() );
		buf.append( ", " );
		buf.append( dto.getDateAdded() );
		buf.append( ", " );
		buf.append( dto.getDateModified() );
		buf.append( ", " );
		buf.append( dto.getConfirmationCode() );
		buf.append( ", " );
		buf.append( dto.getConfirmed() );
		buf.append( ", " );
		buf.append( dto.getAdmin() );
		buf.append( ", " );
		buf.append( dto.getPaid() );
		buf.append( ", " );
		buf.append( dto.getSubscriptionExpires() );
		buf.append( ", " );
		buf.append( dto.getSubscriptionYears() );
		buf.append( ", " );
		buf.append( dto.getReminderSent() );
		buf.append( ", " );
		buf.append( dto.getCanceled() );
		buf.append( ", " );
		buf.append( dto.getCancelDate() );
		buf.append( ", " );
		buf.append( dto.getDemoAccount() );
		System.out.println( buf.toString() );
	}

}
