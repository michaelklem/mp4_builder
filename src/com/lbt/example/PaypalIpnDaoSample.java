/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.lbt.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.lbt.dao.PaypalIpnDao;
import com.lbt.dto.PaypalIpn;
import com.lbt.exceptions.PaypalIpnDaoException;
import com.lbt.factory.PaypalIpnDaoFactory;

public class PaypalIpnDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWherePaypalIpnIdEquals(0);
		// findWhereResponseEquals("");
		// findWhereTxnIdEquals("");
		// findWhereTxnTypeEquals("");
		// findWherePaymentStatusEquals("");
		// findWherePaymentAmountEquals("");
		// findWherePayerEmailEquals("");
		// findWherePaymentDateEquals(null);
		// findWhereIpnDateEquals(null);
		// findWhereKeysEquals("");
		// findWhereValsEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaypalIpnIdEquals'
	 * 
	 * @param paypalIpnId
	 */
	public static void findWherePaypalIpnIdEquals(long paypalIpnId)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWherePaypalIpnIdEquals(paypalIpnId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereResponseEquals'
	 * 
	 * @param response
	 */
	public static void findWhereResponseEquals(String response)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWhereResponseEquals(response);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTxnIdEquals'
	 * 
	 * @param txnId
	 */
	public static void findWhereTxnIdEquals(String txnId)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWhereTxnIdEquals(txnId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTxnTypeEquals'
	 * 
	 * @param txnType
	 */
	public static void findWhereTxnTypeEquals(String txnType)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWhereTxnTypeEquals(txnType);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaymentStatusEquals'
	 * 
	 * @param paymentStatus
	 */
	public static void findWherePaymentStatusEquals(String paymentStatus)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWherePaymentStatusEquals(paymentStatus);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaymentAmountEquals'
	 * 
	 * @param paymentAmount
	 */
	public static void findWherePaymentAmountEquals(String paymentAmount)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWherePaymentAmountEquals(paymentAmount);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePayerEmailEquals'
	 * 
	 * @param payerEmail
	 */
	public static void findWherePayerEmailEquals(String payerEmail)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWherePayerEmailEquals(payerEmail);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePaymentDateEquals'
	 * 
	 * @param paymentDate
	 */
	public static void findWherePaymentDateEquals(Date paymentDate)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWherePaymentDateEquals(paymentDate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIpnDateEquals'
	 * 
	 * @param ipnDate
	 */
	public static void findWhereIpnDateEquals(Date ipnDate)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWhereIpnDateEquals(ipnDate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereKeysEquals'
	 * 
	 * @param keys
	 */
	public static void findWhereKeysEquals(String keys)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWhereKeysEquals(keys);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereValsEquals'
	 * 
	 * @param vals
	 */
	public static void findWhereValsEquals(String vals)
	{
		try {
			PaypalIpnDao _dao = getPaypalIpnDao();
			PaypalIpn _result[] = _dao.findWhereValsEquals(vals);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getPaypalIpnDao'
	 * 
	 * @return PaypalIpnDao
	 */
	public static PaypalIpnDao getPaypalIpnDao()
	{
		return PaypalIpnDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(PaypalIpn dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getPaypalIpnId() );
		buf.append( ", " );
		buf.append( dto.getResponse() );
		buf.append( ", " );
		buf.append( dto.getTxnId() );
		buf.append( ", " );
		buf.append( dto.getTxnType() );
		buf.append( ", " );
		buf.append( dto.getPaymentStatus() );
		buf.append( ", " );
		buf.append( dto.getPaymentAmount() );
		buf.append( ", " );
		buf.append( dto.getPayerEmail() );
		buf.append( ", " );
		buf.append( dto.getPaymentDate() );
		buf.append( ", " );
		buf.append( dto.getIpnDate() );
		buf.append( ", " );
		buf.append( dto.getKeys() );
		buf.append( ", " );
		buf.append( dto.getVals() );
		System.out.println( buf.toString() );
	}

}
