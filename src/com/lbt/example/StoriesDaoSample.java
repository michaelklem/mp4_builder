/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.lbt.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.lbt.dao.StoriesDao;
import com.lbt.dto.Stories;
import com.lbt.exceptions.StoriesDaoException;
import com.lbt.factory.StoriesDaoFactory;

public class StoriesDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByUsers(0);
		// findWhereStoryIdEquals(0);
		// findWhereUserIdEquals(0);
		// findWhereTitleEquals("");
		// findWhereAuthorEquals("");
		// findWhereImagePathEquals("");
		// findWhereImagePathMedEquals("");
		// findWhereImagePathSmlEquals("");
		// findWhereAPublicEquals(0);
		// findWhereDateCreatedEquals(null);
		// findWhereDateModifiedEquals(null);
		// findWhereContestRelatedEquals(0);
		// findWhereFeaturedEquals(0);
		// findWhereCraftEquals(0);
		// findWhereUnsavedEquals(0);
		// findWhereAudioPathEquals("");
		// findWhereIsProcessingEquals(0);
		// findWhereIsCompliedEquals(0);
		// findWhereIsErrorEquals(0);
		// findWhereDateCompliedEquals(null);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByUsers'
	 * 
	 * @param userId
	 */
	public static void findByUsers(long userId)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findByUsers(userId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStoryIdEquals'
	 * 
	 * @param storyId
	 */
	public static void findWhereStoryIdEquals(long storyId)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereStoryIdEquals(storyId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUserIdEquals'
	 * 
	 * @param userId
	 */
	public static void findWhereUserIdEquals(long userId)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereUserIdEquals(userId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTitleEquals'
	 * 
	 * @param title
	 */
	public static void findWhereTitleEquals(String title)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereTitleEquals(title);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereAuthorEquals'
	 * 
	 * @param author
	 */
	public static void findWhereAuthorEquals(String author)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereAuthorEquals(author);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereImagePathEquals'
	 * 
	 * @param imagePath
	 */
	public static void findWhereImagePathEquals(String imagePath)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereImagePathEquals(imagePath);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereImagePathMedEquals'
	 * 
	 * @param imagePathMed
	 */
	public static void findWhereImagePathMedEquals(String imagePathMed)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereImagePathMedEquals(imagePathMed);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereImagePathSmlEquals'
	 * 
	 * @param imagePathSml
	 */
	public static void findWhereImagePathSmlEquals(String imagePathSml)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereImagePathSmlEquals(imagePathSml);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereAPublicEquals'
	 * 
	 * @param aPublic
	 */
	public static void findWhereAPublicEquals(short aPublic)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereAPublicEquals(aPublic);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDateCreatedEquals'
	 * 
	 * @param dateCreated
	 */
	public static void findWhereDateCreatedEquals(Date dateCreated)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereDateCreatedEquals(dateCreated);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDateModifiedEquals'
	 * 
	 * @param dateModified
	 */
	public static void findWhereDateModifiedEquals(Date dateModified)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereDateModifiedEquals(dateModified);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereContestRelatedEquals'
	 * 
	 * @param contestRelated
	 */
	public static void findWhereContestRelatedEquals(short contestRelated)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereContestRelatedEquals(contestRelated);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereFeaturedEquals'
	 * 
	 * @param featured
	 */
	public static void findWhereFeaturedEquals(short featured)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereFeaturedEquals(featured);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCraftEquals'
	 * 
	 * @param craft
	 */
	public static void findWhereCraftEquals(short craft)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereCraftEquals(craft);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUnsavedEquals'
	 * 
	 * @param unsaved
	 */
	public static void findWhereUnsavedEquals(short unsaved)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereUnsavedEquals(unsaved);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereAudioPathEquals'
	 * 
	 * @param audioPath
	 */
	public static void findWhereAudioPathEquals(String audioPath)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereAudioPathEquals(audioPath);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIsProcessingEquals'
	 * 
	 * @param isProcessing
	 */
	public static void findWhereIsProcessingEquals(short isProcessing)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereIsProcessingEquals(isProcessing);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIsCompliedEquals'
	 * 
	 * @param isComplied
	 */
	public static void findWhereIsCompliedEquals(short isComplied)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereIsCompliedEquals(isComplied);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIsErrorEquals'
	 * 
	 * @param isError
	 */
	public static void findWhereIsErrorEquals(short isError)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereIsErrorEquals(isError);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereDateCompliedEquals'
	 * 
	 * @param dateComplied
	 */
	public static void findWhereDateCompliedEquals(Date dateComplied)
	{
		try {
			StoriesDao _dao = getStoriesDao();
			Stories _result[] = _dao.findWhereDateCompliedEquals(dateComplied);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getStoriesDao'
	 * 
	 * @return StoriesDao
	 */
	public static StoriesDao getStoriesDao()
	{
		return StoriesDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Stories dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getStoryId() );
		buf.append( ", " );
		buf.append( dto.getUserId() );
		buf.append( ", " );
		buf.append( dto.getTitle() );
		buf.append( ", " );
		buf.append( dto.getAuthor() );
		buf.append( ", " );
		buf.append( dto.getImagePath() );
		buf.append( ", " );
		buf.append( dto.getImagePathMed() );
		buf.append( ", " );
		buf.append( dto.getImagePathSml() );
		buf.append( ", " );
		buf.append( dto.getAPublic() );
		buf.append( ", " );
		buf.append( dto.getDateCreated() );
		buf.append( ", " );
		buf.append( dto.getDateModified() );
		buf.append( ", " );
		buf.append( dto.getContestRelated() );
		buf.append( ", " );
		buf.append( dto.getFeatured() );
		buf.append( ", " );
		buf.append( dto.getCraft() );
		buf.append( ", " );
		buf.append( dto.getUnsaved() );
		buf.append( ", " );
		buf.append( dto.getAudioPath() );
		buf.append( ", " );
		buf.append( dto.getIsProcessing() );
		buf.append( ", " );
		buf.append( dto.getIsComplied() );
		buf.append( ", " );
		buf.append( dto.getDateComplied() );
		buf.append( ", " );
		buf.append( dto.getIsError() );
		System.out.println( buf.toString() );
	}

}
