/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.lbt.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.lbt.dao.SharedStoriesDao;
import com.lbt.dto.SharedStories;
import com.lbt.exceptions.SharedStoriesDaoException;
import com.lbt.factory.SharedStoriesDaoFactory;

public class SharedStoriesDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByUsers(0);
		// findByStories(0);
		// findWhereSharedStoryIdEquals(0);
		// findWhereUserIdEquals(0);
		// findWhereStoryIdEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			SharedStoriesDao _dao = getSharedStoriesDao();
			SharedStories _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByUsers'
	 * 
	 * @param userId
	 */
	public static void findByUsers(long userId)
	{
		try {
			SharedStoriesDao _dao = getSharedStoriesDao();
			SharedStories _result[] = _dao.findByUsers(userId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByStories'
	 * 
	 * @param storyId
	 */
	public static void findByStories(long storyId)
	{
		try {
			SharedStoriesDao _dao = getSharedStoriesDao();
			SharedStories _result[] = _dao.findByStories(storyId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSharedStoryIdEquals'
	 * 
	 * @param sharedStoryId
	 */
	public static void findWhereSharedStoryIdEquals(long sharedStoryId)
	{
		try {
			SharedStoriesDao _dao = getSharedStoriesDao();
			SharedStories _result[] = _dao.findWhereSharedStoryIdEquals(sharedStoryId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUserIdEquals'
	 * 
	 * @param userId
	 */
	public static void findWhereUserIdEquals(long userId)
	{
		try {
			SharedStoriesDao _dao = getSharedStoriesDao();
			SharedStories _result[] = _dao.findWhereUserIdEquals(userId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStoryIdEquals'
	 * 
	 * @param storyId
	 */
	public static void findWhereStoryIdEquals(long storyId)
	{
		try {
			SharedStoriesDao _dao = getSharedStoriesDao();
			SharedStories _result[] = _dao.findWhereStoryIdEquals(storyId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getSharedStoriesDao'
	 * 
	 * @return SharedStoriesDao
	 */
	public static SharedStoriesDao getSharedStoriesDao()
	{
		return SharedStoriesDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(SharedStories dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getSharedStoryId() );
		buf.append( ", " );
		buf.append( dto.getUserId() );
		buf.append( ", " );
		buf.append( dto.getStoryId() );
		System.out.println( buf.toString() );
	}

}
